// Generated by Dagger (https://dagger.dev).
package com.rekovi.taskmanager.data.repository;

import com.rekovi.taskmanager.data.source.local.PreferencesManager;
import com.rekovi.taskmanager.data.source.remote.SupabaseClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<SupabaseClient> supabaseClientProvider;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  public AuthRepositoryImpl_Factory(Provider<SupabaseClient> supabaseClientProvider,
      Provider<PreferencesManager> preferencesManagerProvider) {
    this.supabaseClientProvider = supabaseClientProvider;
    this.preferencesManagerProvider = preferencesManagerProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return newInstance(supabaseClientProvider.get(), preferencesManagerProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(Provider<SupabaseClient> supabaseClientProvider,
      Provider<PreferencesManager> preferencesManagerProvider) {
    return new AuthRepositoryImpl_Factory(supabaseClientProvider, preferencesManagerProvider);
  }

  public static AuthRepositoryImpl newInstance(SupabaseClient supabaseClient,
      PreferencesManager preferencesManager) {
    return new AuthRepositoryImpl(supabaseClient, preferencesManager);
  }
}
