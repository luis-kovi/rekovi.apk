// Generated by Dagger (https://dagger.dev).
package com.rekovi.taskmanager.di;

import com.rekovi.taskmanager.data.repository.TaskRepository;
import com.rekovi.taskmanager.data.source.remote.SupabaseClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideTaskRepositoryFactory implements Factory<TaskRepository> {
  private final Provider<SupabaseClient> supabaseClientProvider;

  public AppModule_ProvideTaskRepositoryFactory(Provider<SupabaseClient> supabaseClientProvider) {
    this.supabaseClientProvider = supabaseClientProvider;
  }

  @Override
  public TaskRepository get() {
    return provideTaskRepository(supabaseClientProvider.get());
  }

  public static AppModule_ProvideTaskRepositoryFactory create(
      Provider<SupabaseClient> supabaseClientProvider) {
    return new AppModule_ProvideTaskRepositoryFactory(supabaseClientProvider);
  }

  public static TaskRepository provideTaskRepository(SupabaseClient supabaseClient) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideTaskRepository(supabaseClient));
  }
}
