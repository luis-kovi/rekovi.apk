// Generated by Dagger (https://dagger.dev).
package com.rekovi.taskmanager.presentation.auth;

import com.rekovi.taskmanager.data.auth.GoogleAuthManager;
import com.rekovi.taskmanager.data.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AuthViewModel_Factory implements Factory<AuthViewModel> {
  private final Provider<AuthRepository> authRepositoryProvider;

  private final Provider<GoogleAuthManager> googleAuthManagerProvider;

  public AuthViewModel_Factory(Provider<AuthRepository> authRepositoryProvider,
      Provider<GoogleAuthManager> googleAuthManagerProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
    this.googleAuthManagerProvider = googleAuthManagerProvider;
  }

  @Override
  public AuthViewModel get() {
    return newInstance(authRepositoryProvider.get(), googleAuthManagerProvider.get());
  }

  public static AuthViewModel_Factory create(Provider<AuthRepository> authRepositoryProvider,
      Provider<GoogleAuthManager> googleAuthManagerProvider) {
    return new AuthViewModel_Factory(authRepositoryProvider, googleAuthManagerProvider);
  }

  public static AuthViewModel newInstance(AuthRepository authRepository,
      GoogleAuthManager googleAuthManager) {
    return new AuthViewModel(authRepository, googleAuthManager);
  }
}
